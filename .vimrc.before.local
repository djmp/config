" Automatically set the rainbow parentheses toggles to on
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

""nnoremap <special> <M-Up> :bnext<CR>
""nnoremap <special> <M-Down> :bprevious<CR>
"nnoremap <M-]> gt
"nnoremap <M-[> gT

let g:undotree_WindowLayout = 4

" ---------------------------------------------------------------------------
"  Automagic Clojure folding on defn's and defmacro's
"
function GetClojureFold()
    if getline(v:lnum) =~ '^\s*(defn.*\s'
        return ">1"
    elseif getline(v:lnum) =~ '^\s*(defmacro.*\s'
        return ">1"
    elseif getline(v:lnum) =~ '^\s*(defmethod.*\s'
        return ">1"
    elseif getline(v:lnum) =~ '^\s*$'
        let my_cljnum = v:lnum
        let my_cljmax = line("$")

        while (1)
            let my_cljnum = my_cljnum + 1
            if my_cljnum > my_cljmax
                return "<1"
            endif

            let my_cljdata = getline(my_cljnum)

            " If we match an empty line, stop folding
            if my_cljdata =~ '^$'
                return "<1"
            elseif
                return "="
            endif
        endwhile
    else
        return "="
    endif
endfunction

function TurnOnClojureFolding()
    setlocal foldexpr=GetClojureFold()
    setlocal foldmethod=expr
endfunction

autocmd FileType clojure call TurnOnClojureFolding()
autocmd FileType clj call TurnOnClojureFolding()
